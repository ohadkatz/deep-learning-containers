account_id: &ACCOUNT_ID <set-$ACCOUNT_ID-in-environment>
region: &REGION <set-$REGION-in-environment>
base_framework: &BASE_FRAMEWORK pytorch
framework: &FRAMEWORK !join [ "qualcomm_", *BASE_FRAMEWORK]
version: &VERSION 2.0.1
short_version: &SHORT_VERSION "2.0"
contributor: qualcomm
arch_type: x86

repository_info:
  inference_repository: &INFERENCE_REPOSITORY
    image_type: &INFERENCE_IMAGE_TYPE inference
    root: !join [ "qualcomm/", *BASE_FRAMEWORK, "/", *INFERENCE_IMAGE_TYPE ]
    repository_name: &REPOSITORY_NAME !join ["pr", "-", "qualcomm", "-", *BASE_FRAMEWORK, "-", *INFERENCE_IMAGE_TYPE]
    repository: &REPOSITORY !join [ *ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *REPOSITORY_NAME ]

context:
  inference_context: &INFERENCE_CONTEXT
    mms-entrypoint:
      source: ../../build_artifacts/inference/mms-entrypoint.py
      target: mms-entrypoint.py
    config:
      source: ../../build_artifacts/inference/config.properties
      target: config.properties
    deep_learning_container:
      source: ../../../src/deep_learning_container.py
      target: deep_learning_container.py

images:
  BuildQualcommPytorchGpuPy39InferenceDockerImage:
    <<: *INFERENCE_REPOSITORY
    build: &QUALCOMM_PYTORCH_GPU_INFERENCE_PY3 false
    image_size_baseline: &IMAGE_SIZE_BASELINE 15000
    device_type: &DEVICE_TYPE gpu
    python_version: &DOCKER_PYTHON_VERSION py3
    tag_python_version: &TAG_PYTHON_VERSION py39
    qnn_version: &QNN_VERSION qnn1
    os_version: &OS_VERSION ubuntu20.04
    docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /,
                         *CUDA_VERSION, /Dockerfile., *DEVICE_TYPE ]
    context:
      <<: *INFERENCE_CONTEXT
